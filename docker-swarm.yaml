version: '3.1'

services:

  redis:
    hostname:
      redis
    image: redis
    ports:
      - "6379:6379"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '1'
          memory: 500M
        reservations:
          cpus: '0.01'
          memory: 200M
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  celery:
    image: celery_and_redis
    volumes:
      - ./:/code/
    command:
      ./entrypoint.celery.sh
    env_file:
      - .env
    depends_on:
      - redis
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 500M
        reservations:
          cpus: '0.01'
          memory: 200M
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  backend:
    image: celery_and_redis
    hostname: backend
    volumes:
      - ./:/code/
    command:
      ./entrypoint.backend.sh
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - celery
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 500M
        reservations:
          cpus: '0.01'
          memory: 200M
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s